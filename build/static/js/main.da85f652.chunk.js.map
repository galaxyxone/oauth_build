{"version":3,"sources":["Home.js","Profile.js","Nav.js","Auth/Auth.js","Callback.js","Public.js","Private.js","Courses.js","AuthContext.js","PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["Home","_this$props$auth","this","props","auth","isAuthenticated","login","react_default","a","createElement","Link","to","onClick","Component","Profile","state","profile","error","loadUserProfile","_this2","getProfile","setState","Fragment","nickname","style","maxWidth","maxHeight","src","picture","alt","JSON","stringify","Nav","logout","userHasScopes","REDIRECT_ON_LOGIN","_accessToken","_scopes","_expiresAt","Auth","history","_this","Object","classCallCheck","localStorage","setItem","location","auth0","authorize","handleAuthentication","parseHash","err","authResult","accessToken","idToken","setSession","redirectLocation","getItem","parse","push","alert","concat","console","log","removeItem","expiresIn","Date","getTime","scope","requestedScopes","scheduleTokenRenewal","clientID","process","REACT_APP_AUTH0_CLIENT_ID","returnTo","getAccessToken","Error","cb","userProfile","client","userInfo","WebAuth","domain","REACT_APP_AUTH0_DOMAIN","redirectUri","REACT_APP_AUTH0_CALLBACK_URL","audience","REACT_APP_AUTH0_AUDIENCE","responseType","scopes","grantedScopes","split","every","includes","checkSession","result","error_description","_this3","delay","now","setTimeout","renewToken","Callback","componentDidMount","test","hash","Public","message","fetch","then","response","ok","json","catch","Private","headers","Authorization","Courses","courses","map","course","key","id","title","AuthContext","React","createContext","PrivateRoute","_ref","component","rest","objectWithoutProperties","src_AuthContext","Consumer","Route","assign","render","length","join","defaultProps","App","_super","call","tokenRenewalComplete","Provider","value","src_Nav","className","path","exact","src_Home","src_Callback","src_PrivateRoute","Boolean","window","hostname","match","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da85f652.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Home extends Component {\n  render() {\n    const { isAuthenticated, login } = this.props.auth;\n    return (\n      <div>\n        <h1>Home</h1>\n        {isAuthenticated() ? (\n          <Link to=\"/profile\">View profile</Link>\n        ) : (\n          <button onClick={login}>Log In</button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nclass Profile extends Component {\n  state = {\n    profile: null,\n    error: \"\"\n  };\n\n  componentDidMount() {\n    this.loadUserProfile();\n  }\n\n  loadUserProfile() {\n    this.props.auth.getProfile((profile, error) =>\n      this.setState({ profile, error })\n    );\n  }\n\n  render() {\n    const { profile } = this.state;\n    if (!profile) return null;\n    return (\n      <>\n        <h1>Profile</h1>\n        <p>{profile.nickname}</p>\n        <img\n          style={{ maxWidth: 50, maxHeight: 50 }}\n          src={profile.picture}\n          alt=\"profile pic\"\n        />\n        <pre>{JSON.stringify(profile, null, 2)}</pre>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Nav extends Component {\n  render() {\n    const { isAuthenticated, login, logout, userHasScopes } = this.props.auth;\n    return (\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/profile\">Profile</Link>\n          </li>\n          <li>\n            <Link to=\"/public\">Public</Link>\n          </li>\n          {isAuthenticated() && (\n            <li>\n              <Link to=\"/private\">Private</Link>\n            </li>\n          )}\n          {isAuthenticated() &&\n            userHasScopes([\"read:courses\"]) && (\n              <li>\n                <Link to=\"/courses\">Courses</Link>\n              </li>\n            )}\n          <li>\n            <button onClick={isAuthenticated() ? logout : login}>\n              {isAuthenticated() ? \"Log Out\" : \"Log In\"}\n            </button>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import auth0 from \"auth0-js\";\n\nconst REDIRECT_ON_LOGIN = \"redirect_on_login\";\n\n// Stored outside class since private\n// eslint-disable-next-line\nlet _idToken = null;\nlet _accessToken = null;\nlet _scopes = null;\nlet _expiresAt = null;\n\nexport default class Auth {\n  constructor(history) {\n    this.history = history;\n    this.userProfile = null;\n    this.requestedScopes = \"openid profile email read:courses\";\n    this.auth0 = new auth0.WebAuth({\n      domain: process.env.REACT_APP_AUTH0_DOMAIN,\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n      redirectUri: process.env.REACT_APP_AUTH0_CALLBACK_URL,\n      audience: process.env.REACT_APP_AUTH0_AUDIENCE,\n      responseType: \"token id_token\",\n      scope: this.requestedScopes\n    });\n  }\n\n  login = () => {\n    localStorage.setItem(\n      REDIRECT_ON_LOGIN,\n      JSON.stringify(this.history.location)\n    );\n    this.auth0.authorize();\n  };\n\n  handleAuthentication = () => {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n        const redirectLocation =\n          localStorage.getItem(REDIRECT_ON_LOGIN) === \"undefined\"\n            ? \"/\"\n            : JSON.parse(localStorage.getItem(REDIRECT_ON_LOGIN));\n        this.history.push(redirectLocation);\n      } else if (err) {\n        this.history.push(\"/\");\n        alert(`Error: ${err.error}. Check the console for further details.`);\n        console.log(err);\n      }\n      localStorage.removeItem(REDIRECT_ON_LOGIN);\n    });\n  };\n\n  setSession = authResult => {\n    console.log(authResult);\n    // set the time that the access token will expire\n    _expiresAt = authResult.expiresIn * 1000 + new Date().getTime();\n\n    // If there is a value on the `scope` param from the authResult,\n    // use it to set scopes in the session for the user. Otherwise\n    // use the scopes as requested. If no scopes were requested,\n    // set it to nothing\n    _scopes = authResult.scope || this.requestedScopes || \"\";\n\n    _accessToken = authResult.accessToken;\n    _idToken = authResult.idToken;\n    this.scheduleTokenRenewal();\n  };\n\n  isAuthenticated() {\n    return new Date().getTime() < _expiresAt;\n  }\n\n  logout = () => {\n    this.auth0.logout({\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n      returnTo: \"http://localhost:3000\"\n    });\n  };\n\n  getAccessToken = () => {\n    if (!_accessToken) {\n      throw new Error(\"No access token found.\");\n    }\n    return _accessToken;\n  };\n\n  getProfile = cb => {\n    if (this.userProfile) return cb(this.userProfile);\n    this.auth0.client.userInfo(this.getAccessToken(), (err, profile) => {\n      if (profile) this.userProfile = profile;\n      cb(profile, err);\n    });\n  };\n\n  userHasScopes(scopes) {\n    const grantedScopes = (_scopes || \"\").split(\" \");\n    return scopes.every(scope => grantedScopes.includes(scope));\n  }\n\n  renewToken(cb) {\n    this.auth0.checkSession({}, (err, result) => {\n      if (err) {\n        console.log(`Error: ${err.error} - ${err.error_description}.`);\n      } else {\n        this.setSession(result);\n      }\n      if (cb) cb(err, result);\n    });\n  }\n\n  scheduleTokenRenewal() {\n    const delay = _expiresAt - Date.now();\n    if (delay > 0) setTimeout(() => this.renewToken(), delay);\n  }\n}\n","import React, { Component } from \"react\";\n\nclass Callback extends Component {\n  componentDidMount = () => {\n    // Handle authentication if expected values are in the URL.\n    if (/access_token|id_token|error/.test(this.props.location.hash)) {\n      this.props.auth.handleAuthentication();\n    } else {\n      throw new Error(\"Invalid callback URL.\");\n    }\n  };\n  render() {\n    return <h1>Loading...</h1>;\n  }\n}\n\nexport default Callback;\n","import React, { Component } from \"react\";\n\nclass Public extends Component {\n  state = {\n    message: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\"/public\")\n      .then(response => {\n        if (response.ok) return response.json();\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then(response => this.setState({ message: response.message }))\n      .catch(error => this.setState({ message: error.message }));\n  }\n\n  render() {\n    return <p>{this.state.message}</p>;\n  }\n}\n\nexport default Public;\n","import React, { Component } from \"react\";\n\nclass Private extends Component {\n  state = {\n    message: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\"/private\", {\n      headers: { Authorization: `Bearer ${this.props.auth.getAccessToken()}` }\n    })\n      .then(response => {\n        if (response.ok) return response.json();\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then(response => this.setState({ message: response.message }))\n      .catch(error => this.setState({ message: error.message }));\n  }\n\n  render() {\n    return <p>{this.state.message}</p>;\n  }\n}\n\nexport default Private;\n","import React, { Component } from \"react\";\n\nclass Courses extends Component {\n  state = {\n    courses: []\n  };\n\n  componentDidMount() {\n    fetch(\"/course\", {\n      headers: { Authorization: `Bearer ${this.props.auth.getAccessToken()}` }\n    })\n      .then(response => {\n        if (response.ok) return response.json();\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then(response => this.setState({ courses: response.courses }))\n      .catch(error => this.setState({ message: error.message }));\n\n    fetch(\"/admin\", {\n      headers: { Authorization: `Bearer ${this.props.auth.getAccessToken()}` }\n    })\n      .then(response => {\n        if (response.ok) return response.json();\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then(response => console.log(response))\n      .catch(error => this.setState({ message: error.message }));\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.courses.map(course => {\n          return <li key={course.id}>{course.title}</li>;\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default Courses;\n","import React from \"react\";\nconst AuthContext = new React.createContext();\nexport default AuthContext;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport AuthContext from \"./AuthContext\";\n\nfunction PrivateRoute({ component: Component, scopes, ...rest }) {\n  return (\n    <AuthContext.Consumer>\n      {auth => (\n        <Route\n          {...rest}\n          render={props => {\n            // 1. Redirect to login if not logged in.\n            if (!auth.isAuthenticated()) return auth.login();\n\n            // 2. Display message if user lacks required scope(s).\n            if (scopes.length > 0 && !auth.userHasScopes(scopes)) {\n              return (\n                <h1>\n                  Unauthorized - You need the following scope(s) to view this\n                  page: {scopes.join(\",\")}.\n                </h1>\n              );\n            }\n\n            // 3. Render component\n            return <Component auth={auth} {...props} />;\n          }}\n        />\n      )}\n    </AuthContext.Consumer>\n  );\n}\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  scopes: PropTypes.array\n};\n\nPrivateRoute.defaultProps = {\n  scopes: []\n};\n\nexport default PrivateRoute;\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Profile from \"./Profile\";\nimport Nav from \"./Nav\";\nimport Auth from \"./Auth/Auth\";\nimport Callback from \"./Callback\";\nimport Public from \"./Public\";\nimport Private from \"./Private\";\nimport Courses from \"./Courses\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport AuthContext from \"./AuthContext\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      auth: new Auth(this.props.history),\n      tokenRenewalComplete: false\n    };\n  }\n\n  componentDidMount() {\n    this.state.auth.renewToken(() =>\n      this.setState({ tokenRenewalComplete: true })\n    );\n  }\n\n  render() {\n    const { auth } = this.state;\n    // Show loading message until the token renewal check is completed.\n    if (!this.state.tokenRenewalComplete) return \"Loading...\";\n    return (\n      <AuthContext.Provider value={auth}>\n        <Nav auth={auth} />\n        <div className=\"body\">\n          <Route\n            path=\"/\"\n            exact\n            render={props => <Home auth={auth} {...props} />}\n          />\n          <Route\n            path=\"/callback\"\n            render={props => <Callback auth={auth} {...props} />}\n          />\n          <PrivateRoute path=\"/profile\" component={Profile} />\n          <Route path=\"/public\" component={Public} />\n          <PrivateRoute path=\"/private\" component={Private} />\n          <PrivateRoute\n            path=\"/courses\"\n            component={Courses}\n            scopes={[\"read:courses\"]}\n          />\n        </div>\n      </AuthContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <Route component={App} />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}